setwd("/Workplace")
setwd("~/Workplace/Data Science/R Dev/R Introduction @ KPMG/")
install.packages("lubridate")
install.packages("tidyverse")
melbourne_housing <- read_csv('./melbourne_housing_market.csv');
melbourne_housing <- read_csv('./melbourne_housing_market.csv');
melbourne_housing <- read_csv('./melbourne_housing_market.csv');
melbourne_housing <- read_csv('melbourne_housing_market.csv');
getwd()
melbourne_housing <- read_csv('./melbourne_housing_market.csv');
library(tidyverse)
library(tidyverse);
library(lubridate);
#### Loading datasets
melbourne_housing <- read_csv('./melbourne_housing_market.csv');
glimpse(melbourne_housing)
summary(melbourne_housing);
glimpse(melbourne_housing);
head(melbourne_housing, 3);
library(dplyr);
melbourne_housing %>% select(address, suburb)
filter(suburb == "Southbank")
melbourne_housing %>%  filter(suburb == "Southbank")
## select statement
melbourne_housing %>% select(address, suburb);
## check attributes
dim(melbourne_housing)
## check attributes
columns(melbourne_housing)
## check attributes
column(melbourne_housing)
## check attributes
glimpse(melbourne_housing)
## select statement
melbourne_housing %>% select(address, suburb);
## filter statement
melbourne_housing %>% filter(suburb == 'Southbank')
melbourne_housing %>% filter(suburb == 'Mount Waverley' & rooms >= 3 & price <= 1000000)
melbourne_housing %>% filter(suburb %like% 'South')
melbourne_housing %>% filter(suburb, grepl('South', fixed = TRUE))
melbourne_housing %>% filter(suburb, grepl('South', suburb, fixed = TRUE))
melbourne_housing %>% filter(South, grepl('South', suburb, fixed = TRUE))
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley'))
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley') & rooms >= 5)
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley') & rooms >= 10)
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley') & rooms >= 8)
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley') & rooms >= 7)
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley') & rooms >= 6)
melbourne_housing %>% filter(suburb %in% c('Southbank', 'Mount Waverley') & rooms >= 5)
# partial matching
melbourne_housing %>% filter(str_detect(suburb, 'South'))
# partial matching
melbourne_housing %>% filter(str_detect(suburb, 'Southba'))
# partial matching
melbourne_housing %>% filter(str_detect(suburb, 'Southb'))
## arrange / sort by columns
melbourne_housing %>%
filter(suburb == 'Mount Waverley' & rooms >= 3 & price <= 1000000) %>%
arrange(desc(rooms), price)
## arrange / sort by columns
melbourne_housing %>%
filter(suburb == 'Mount Waverley' & rooms >= 3 & price <= 1000000) %>%
arrange(desc(rooms), asc(price))
## arrange / sort by columns
melbourne_housing %>%
filter(suburb == 'Mount Waverley' & rooms >= 3 & price <= 1000000) %>%
arrange(desc(rooms), (price))
## Rename columns
melbourne_housing %>%
select(address, suburb) %>%
rename(suburb_name = suburn)
## Rename columns
melbourne_housing %>%
select(address, suburb) %>%
rename(suburb_name = suburb)
## Mutate to create new columns or variables
melbourne_housing %>%
filter(subrub == 'Toorak' & price >= 1000000) %>%
select(address, suburb, price) %>%
mutate(price_in_millions = price / 1000000)
## Mutate to create new columns or variables
melbourne_housing %>%
filter(suburb == 'Toorak' & price >= 1000000) %>%
select(address, suburb, price) %>%
mutate(price_in_millions = price / 1000000)
?na.rm
na.rm --help
--help na.rm
-help na.rm
na.rm
? rename
? na.rm
## summarise to reduce multiple values (count, mean / avg, max, min, ....)
melbourne_housing %>%
group_by(suburb) %>%
summarise(mean_price = mean(price, na.rm = TRUE))
melbourne_housing %>%
filter(suburb == "Toorak" | suburb == "Brighton") %>%
filter(price > 2000000) %>%
group_by(suburb) %>%
summarise(number_of_houses = n())
melbourne_housing %>%
filter(type == 'u') %>%
filter(price > 1000000) %>%
group_by(suburb) %>%
summarise(number_of_units = n())
melbourne_housing %>%
filter(type == 'u') %>%
filter(price > 1000000) %>%
group_by(suburb) %>%
summarise(number_of_units = n()) %>%
mutate(suburb_rank = dense_rank(desc(number_of_units))) %>% # rank by row counts
arrange(suburb_rank) # sort by rank asc
glimpse(mel)
glimpse(melbourne_housing)
## conversion from wide data format to narrow data format with Spread and Gather
narrow_data_frame <- data.frame(name = c('Alice', 'Bob'),
subject = c('Maths', 'Science', 'English'),
marks = c(90, 90, 85, 75, 75, 60)) %>%
arrange(name, subject)
wide_data_frame <- narrow_data_frame %>% spread(subject, marks)
narrow_data_frame
wide_
wide_data_frame
suburb_data <- read_csv('./suburb_data.csv');
glimpse(suburb_data);
glimpse(suburb_data)
glimpse(melbourne_housing)
melbourne_housing %>%
mutate(dt = dmy(dt)) %>% # dmy : convert string to date
mutate(yr = year(dt)) %>%
filter(yr = 2017) %>%
group_by(selling_agent) %>%
summarise(total_commission = 0.02 * sum(price, na.rm = TRUE)) # na.rm : remove null values
melbourne_housing %>%
mutate(dt = dmy(dt)) %>% # dmy : convert string to date
mutate(yr = year(dt)) %>%
filter(yr == 2017) %>%
group_by(selling_agent) %>%
summarise(total_commission = 0.02 * sum(price, na.rm = TRUE)) # na.rm : remove null values
melbourne_housing %>%
mutate(dt = dmy(dt)) %>% # dmy : convert string to date
mutate(yr = year(dt)) %>%
mutate(price = as.numeric(price)) %>%
filter(yr == 2017) %>%
group_by(selling_agent) %>%
summarise(total_commission = 0.02 * sum(price, na.rm = TRUE)) # na.rm : remove null values
glimpse(melbourne_housing)
glimpse(suburb_data)
suburb_data %>%
left_join(melbourne_housing, by = c('suburb', 'suburb')) %>%
group_by(suburb) %>%
summarise(suburb_med_price = median(price)) %>%
mutate(top_exp_suburb = dense_rank(desc(suburb_med_price))) %>%
arrange(top_exp_suburb)
suburb_data %>%
left_join(melbourne_housing, by = c('suburb', 'suburb')) %>%
filter(distance_from_city < 10) %>%
group_by(suburb) %>%
summarise(suburb_med_price = median(price, na.rm = TRUE)) %>%
mutate(top_exp_suburb = dense_rank(desc(suburb_med_price))) %>%
arrange(top_exp_suburb)
suburb_data %>%
left_join(melbourne_housing, by = c('suburb', 'suburb')) %>%
filter(distance_from_city < 10) %>%
group_by(suburb) %>%
summarise(suburb_med_price = median(price, na.rm = TRUE)) %>%
mutate(top_exp_suburb = dense_rank(desc(suburb_med_price))) %>%
arrange(top_exp_suburb) %>%
head(5)
?between
narrow_data_frame
wide_data_frame
?spread
?between
suburb_data %>%
filter(between(distance_from_city, 10, 20) )
glimpse(melbourne_housing)
suburb_data %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
melbourne_housing %>%
filter(rooms %in% (2, 3, 4)) %>%
group_by(suburb) %>%
suburb_data %>%
left_join(melbourne_housing, by = 'suburb')
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, room) %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, room) %>%
summarise(median_price = median(price, na.rm = TRUE))
suburb_data
suburb_data %>%
left_join(melbourne_housing, by = 'suburb')
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, room) %>%
summarise(median_price = median(price, na.rm = TRUE))
suburb_data %>%
left_join(melbourne_housing, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, room) %>%
summarise(median_price = median(price, na.rm = TRUE))
suburb_data %>%
left_join(melbourne_housing, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE))
suburb_data %>%
left_join(melbourne_housing, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE)) %>%
spread(rooms, median_price)
melbourne_housing %>%
left_join(suburb_data, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'eastern metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE)) %>%
spread(rooms, median_price)
melbourne_housing %>%
left_join(suburb_data, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'Eastern')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE)) %>%
spread(rooms, median_price)
melbourne_housing %>%
left_join(suburb_data, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'Eastern Metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE)) %>%
spread(rooms, median_price)
melbourne_housing %>%
left_join(suburb_data, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'Eastern Metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE))
melbourne_housing %>%
left_join(suburb_data, by = 'suburb') %>%
filter(between(distance_from_city, 10, 20)) %>%
filter(str_detect(region_name, 'Eastern Metro')) %>%
filter(rooms %in% c(2, 3, 4)) %>%
group_by(suburb, rooms) %>%
summarise(median_price = median(price, na.rm = TRUE)) %>%
spread(rooms, median_price)
library(ggplot2)
options(scipen = 10000000)
options(scipen = 1000000)
docklands <- melbourne_housing %>%
filter(suburb == "Docklands") %>%
filter(!is.na(price))
plot(docklands$rooms, docklands$price)
ggplot(dockland) +
geom_point(aes(x = rooms, y = price))
ggplot(docklands) +
geom_point(aes(x = rooms, y = price))
plot(docklands$rooms, docklands$price)
###
ggplot(docklands) +
geom_point(aes(x = rooms, y = price))
### change data point shape (black color)
ggplot(docklands) +
geom_point(aes(x = rooms, y = price, color="blue"))
### Histogram
ggplot(docklands) +
geom_histogram(aes(x = price)) +
labs(x = "Price",
y = "Number of properties")
glimpse(melbourne_housing)
glimpse(suburb_data)
mel_city_council <- suburb_data %>%
filter(str_detect(council_area, 'Melbourne City Council'))
### Histogram
ggplot(mel_city_council) +
geom_histogram(aes(x = price)) +
labs(x = "Price",
y = "Number of properties")
mel_city_council <- melbourne_housing %>%
inner_join(suburb_data, by = 'suburb') %>%
filter(str_detect(council_area, 'Melbourne City Council'))
### Histogram
ggplot(mel_city_council) +
geom_histogram(aes(x = price)) +
labs(x = "Price",
y = "Number of properties")
? fill
?fill
### Boxplot
ggplot(mel_city_council) +
geom_boxplot(aes(x = 'suburb', y = 'price', fill = 'suburb'))
mel_city_council
### Boxplot
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = 'suburb')) +
labs( x = 'Suburb', y = 'Price')
### Boxplot
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price')
View(mel_city_council)
View(mel_city_council)
mel_city_council
mel_city_council <- melbourne_housing %>%
inner_join(suburb_data, by = 'suburb') %>%
filter(str_detect(council_area, 'Melbourne City Council')) %>%
mutate(dt = dmy(dt)) %>%
mutate(yr = year(dt))
plot(docklands$rooms, docklands$price)
### Histogram
ggplot(mel_city_council) +
geom_histogram(aes(x = price)) +
labs(x = "Price",
y = "Number of properties")
### Boxplot
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price')
mel_city_council
mel_city_price <- mel_city_council %>%
group_by(suburb, yr) %>%
summarise(median_house_price = median(price, na.rm=TRUE))
View(mel_city_price)
View(mel_city_price)
mel_city_price
### Line Plot | price trend
ggplot(mel_city_price) +
geom_line(aes(x = yr, y = median_house_price),
group = suburb, colour = suburb) +
labs(x = 'Year', y = 'Median Price', title = 'Price Trend')
### Line Plot | price trend
ggplot(mel_city_price) +
geom_line(aes(x = yr, y = median_house_price,
group = suburb, colour = suburb)) +
labs(x = 'Year', y = 'Median Price', title = 'Price Trend')
### Line Plot | price trend
ggplot(mel_city_price) +
geom_line(aes(x = yr, y = median_house_price,
group = suburb, fill = suburb)) +
labs(x = 'Year', y = 'Median Price', title = 'Price Trend')
### Line Plot | price trend
ggplot(mel_city_price) +
geom_line(aes(x = yr, y = median_house_price,
group = suburb, colour = suburb)) +
labs(x = 'Year', y = 'Median Price', title = 'Price Trend')
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Parised")
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired")
### Boxplot
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price')
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired")
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 30000000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 30000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 3000000000000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 300000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 30000000000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 30000000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 3000000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 300000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 30000000))
ggplot(mel_city_council) +
geom_boxplot(aes(x = suburb, y = price, fill = suburb)) +
labs( x = 'Suburb', y = 'Price') +
scale_fill_brewer(palette = "Paired") +
coord_cartesian(ylim = c(0, 3000000))
